[{"C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\index.js":"1","C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\App.js":"2","C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\apiFacade.js":"3","C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\Solidcode.js":"4","C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\components\\NewSearchBar.js":"5","C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\components\\Navbar1.js":"6","C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\components\\playlist.js":"7","C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\components\\SidebarData.js":"8","C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\components\\test.js":"9"},{"size":209,"mtime":1620301931304,"results":"10","hashOfConfig":"11"},{"size":2479,"mtime":1620301931299,"results":"12","hashOfConfig":"11"},{"size":1689,"mtime":1619339471579,"results":"13","hashOfConfig":"11"},{"size":1368,"mtime":1621250478328,"results":"14","hashOfConfig":"11"},{"size":2070,"mtime":1621252819595,"results":"15","hashOfConfig":"11"},{"size":1783,"mtime":1621241144705,"results":"16","hashOfConfig":"11"},{"size":821,"mtime":1621252741658,"results":"17","hashOfConfig":"11"},{"size":484,"mtime":1621241144706,"results":"18","hashOfConfig":"11"},{"size":2063,"mtime":1621253395882,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4xpin8",{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\index.js",[],"C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\App.js",["45","46","47"],"import React, { useState,useEffect, Component } from \"react\"\r\nimport facade from \"./apiFacade\";\r\nimport Musichome from './Solidcode';\r\nimport {Card, Form, Container} from \"react-bootstrap\"\r\nimport \"./App.css\";\r\n\r\nfunction LogIn({ login }) {\r\n  const init = { username: \"\", password: \"\" };\r\n  const [loginCredentials, setLoginCredentials] = useState(init);\r\n \r\n  const performLogin = (evt) => {\r\n    console.log(\"log in\")\r\n    evt.preventDefault();\r\n    login(loginCredentials.username, loginCredentials.password);\r\n  }\r\n  const onChange = (evt) => {\r\n    setLoginCredentials({ ...loginCredentials,[evt.target.id]: evt.target.value })\r\n  }\r\n \r\n  return (\r\n  <Container >\r\n    <div id=\"mydiv\" className= \"w-responsive text-center mx-auto p-3 mt-2\">\r\n     <Card className=\"mb-3\">\r\n       <Card.Img width=\"70%\" src=\"\"/>\r\n       <Card.Body>\r\n      <form className=\"login-form\" onChange={onChange}>\r\n        <Card.Title>\r\n                <h2>SolidMusic</h2>\r\n        </Card.Title>\r\n        <Card.Text>\r\n        Log in for some awesome music\r\n      </Card.Text>\r\n                <div className=\"form-group\">\r\n                \r\n                    <label>Username</label>\r\n                    <input id=\"username\" className=\"form-control\" placeholder=\"User Name\" />\r\n                \r\n\r\n                \r\n                    <label>Password</label>\r\n                    <input id=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Password\" />\r\n                    \r\n                </div>\r\n                \r\n                <button onClick={performLogin} className=\"btn btn-primary btn-block\">Submit</button>\r\n      </form>\r\n      \r\n      </Card.Body>\r\n      </Card>\r\n      </div>\r\n    </Container>\r\n  )\r\n \r\n}\r\nfunction LoggedIn() {\r\n  const [dataFromServer, setDataFromServer] = useState(\"Loading...\")\r\n  useEffect(\r\n    () => {\r\n    facade.fetchData().then(data=> setDataFromServer(data.msg));\r\n  },\r\n   [])\r\n \r\n  return (\r\n    <>\r\n    <Musichome/>\r\n</>\r\n  )\r\n \r\n}\r\n\r\nfunction App() {\r\n  const [loggedIn, setLoggedIn] = useState(false)\r\n \r\n  const logout = () => { \r\n  facade.logout()\r\n  setLoggedIn(false)\r\n} \r\n  const login = (user, pass) => \r\n  {\r\n    facade.login(user,pass)\r\n    .then(res =>setLoggedIn(true));\r\n   } \r\n \r\n  return (\r\n    <div>\r\n      {!loggedIn ? (<LogIn login={login} />) :\r\n        (<div>\r\n          <button onClick={logout}>Logout</button>\r\n          <LoggedIn />\r\n          \r\n        </div>)}\r\n    </div>\r\n  )\r\n \r\n \r\n}\r\nexport default App;\r\n \r\n","C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\apiFacade.js",[],"C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\Solidcode.js",["48","49"],"import React, { useState,useEffect, } from \"react\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport Navbar1 from \"./components/Navbar1\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport \"./Solidcode.css\"\r\nimport {Search} from \"./components/NewSearchBar\"\r\nimport {Test} from './components/test'\r\n\r\n\r\n\r\nfunction Musichome(){\r\n    return(\r\n    <>\r\n    <Router>\r\n    \r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n            <Home />\r\n            </Route>\r\n            <Route path=\"/playlist\" >\r\n                <Playliste/>\r\n            </Route>\r\n            <Route path=\"/profile\">\r\n                <Profile/>\r\n            </Route>\r\n        </Switch>\r\n    </Router>\r\n    </>\r\n    )}\r\n    \r\n    function Home() {\r\n        return (\r\n            <>\r\n            <div className=\"home\">\r\n            <Navbar1/>\r\n                <Search/>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    function Playliste() {\r\n        return (\r\n            <div className=\"playliste\">\r\n                <Navbar1/>\r\n                <Test/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    function Profile() {\r\n        return (\r\n            <>\r\n            <div className=\"profile\">\r\n            <Navbar1/>\r\n                <h1>Profile</h1>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n   \r\n    export default Musichome;","C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\components\\NewSearchBar.js",["50"],"import React, { useState, useEffect } from \"react\"\r\nimport  \"./fetchtable.css\"\r\nimport addToPlayList from './playlist';\r\n\r\n\r\n\r\nconst Search = () => {\r\n    const[searchterm, SetsearchTerm] = useState(\"Sia\")\r\n    const[items, Setitems] = useState([])\r\n\r\n\r\n    useEffect(() => {    const search = async() => {\r\nawait fetch(\"https://solidcode.xyz/SolidMusic/api/solidMusic/search?q=\"+searchterm)\r\n.then(res => res.json())\r\n.then((result)=> {\r\n    Setitems(result.response.hits)\r\n  \r\n}\r\n)\r\n\r\n}\r\nif(searchterm){\r\n    search()\r\n}\r\n\r\n},[searchterm])\r\nconst resultMap = items.map(item =>{\r\n    return (\r\n      <>\r\n   \r\n        <tr>  \r\n        <td className=\"td_image\">\r\n          \r\n          <img className=\"td_image\" src = {item.result.header_image_thumbnail_url} ></img>\r\n          <tr>\r\n            <div className=\"trdiv\">\r\n             <button>SPOTIFY BUTTON</button> \r\n             <div>\r\n               <button><a href={'https://genius.com/'+item.result.url}>LYRICS</a></button> \r\n            </div>\r\n            </div>\r\n          </tr>\r\n        </td>\r\n      <td className=\"result_title\"> {item.result.title} <tr className=\"result_artist\">{item.result.primary_artist.name}</tr>\r\n      </td>\r\n        <td className=\"result_artist\"> {item.result.title_with_featured} \r\n       <div className=\"options_music\">\r\n       <button onClick={addToPlayList.bind(this,item)}>*ADD TO PLAYLIST*</button>\r\n           </div>\r\n        </td>\r\n        </tr>\r\n        </>\r\n    )\r\n})\r\nreturn (\r\n\r\n     <> \r\n        <div className=\"searchbar\">\r\n          <label className=\"searchbar1\">Search Music:</label>\r\n          <input\r\n            className=\"search_input\"\r\n            value={searchterm}\r\n            onChange={e => SetsearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n      <br></br>\r\n\r\n      <div className=\"div-table\">\r\n          <thead>\r\n          <tr>\r\n          <th scope=\"col\"></th>\r\n             <th scope=\"col\"></th>\r\n             <th scope=\"col\"></th>\r\n        </tr>\r\n        </thead>\r\n\r\n          {resultMap}\r\n          \r\n      </div>\r\n   </>\r\n)\r\n}\r\n\r\nexport {Search}","C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\components\\Navbar1.js",["51"],"import React, { useState, useEffect } from \"react\"\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {SidebarData} from \"./SidebarData\";\r\nimport \"./Navbar.css\"\r\nimport {IconContext} from \"react-icons\"\r\n\r\n\r\nfunction Navbar1() {\r\n    const [sidebar, setsidebar] = useState(false)\r\n    \r\n    const showSidebar = () => setsidebar(!sidebar)\r\n    \r\n\r\n    return (\r\n        <>\r\n        <IconContext.Provider value={{color: \"orange\"}}>\r\n            <div className=\"navbar\">\r\n                <Link to=\"#\" className=\"menu-bars\">\r\n                    <FaIcons.FaBars onClick={showSidebar}/>\r\n             </Link>\r\n             <Link className=\"nav-logout\">\r\n             <FaIcons.FaKey />\r\n             </Link>\r\n            </div>\r\n           \r\n\r\n            <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\r\n                <ul className=\"nav-menu-items\" onClick={showSidebar}> \r\n                    <li className=\"navbar-toggle\">\r\n                        <Link to=\"#\" className=\"menu-bars\">\r\n                            <AiIcons.AiOutlineClose/>\r\n                        </Link>\r\n                    </li>\r\n                    {SidebarData.map((item, index) => {\r\n                        return(\r\n                            <li key={index} className={item.cName}>\r\n                                <Link to={item.path}>\r\n                                    {item.icon}\r\n                                    <span>{item.title}</span>\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </nav>\r\n            </IconContext.Provider>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Navbar1;\r\n",["52","53"],"C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\components\\playlist.js",[],"C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\components\\SidebarData.js",["54"],"import React from 'react'\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\n\r\nexport const SidebarData = [\r\n{\r\n    title: \"Home\",\r\n    path: \"/\",\r\n    icon: <AiIcons.AiFillHome />,\r\n    cName: \"nav-text\"\r\n},\r\n{\r\n    title: \"Profile\",\r\n    path: \"/profile\",\r\n    icon: <AiIcons.AiFillProfile />,\r\n    cName: \"nav-text\"\r\n},\r\n{\r\n    title: \"Playlist\",\r\n    path: \"/playlist\",\r\n    icon: <AiIcons.AiFillFolderAdd />,\r\n    cName: \"nav-text\"\r\n}\r\n\r\n]\r\n","C:\\Users\\mathi\\Documents\\NetBeansProjects\\SolidMusic\\FrontEnd\\src\\components\\test.js",["55","56","57"],"import React, { useState, useEffect } from \"react\"\r\nimport  \"./fetchtable.css\"\r\nimport addToPlayList from './playlist';\r\n\r\n\r\n\r\nconst Test = () => {\r\n\r\n    const[items, Setitems] = useState([])\r\n    const[searchterm, SetsearchTerm] = useState(\"Sia\")\r\n\r\n\r\n    \r\n\r\n    useEffect(() => {  \r\n          const search = async() => {\r\n            const options = makeOptions(\"GET\", true);\r\nconsole.log(\"opts: \"+options)\r\nawait fetch(\"http://localhost:8080/SolidCode-BackEnd/api/playlist/get\",options)\r\n.then(res => res.json())\r\n.then((result)=> {\r\n    Setitems(result)\r\n     console.log(result)\r\n  \r\n}\r\n)\r\n\r\n}\r\nif(searchterm){\r\n    search()\r\n}\r\n\r\n},[searchterm])\r\nconst resultMap = items.map(item => {\r\nreturn(\r\n    <>\r\n   \r\n    <tr>  \r\n    <td className=\"td_image\">\r\n      \r\n      <img className=\"td_image\" src = {item.header_image_thumbnail_url} ></img>\r\n      <tr>\r\n        <div className=\"trdiv\">\r\n         <div>\r\n           <button><a href={'https://genius.com/'+item.url}>LYRICS</a></button> \r\n        </div>\r\n        </div>\r\n      </tr>\r\n    </td>\r\n\r\n  <td className=\"result_title\"> {item.full_title} <tr className=\"result_artist\">{item.artist.name}</tr>\r\n  </td>\r\n    <td className=\"result_artist\"> {item.title_with_featured} \r\n   <div className=\"options_music\">\r\n       </div>\r\n    </td>\r\n    </tr>\r\n    </>\r\n)\r\n})\r\n\r\nreturn (\r\n\r\n     <> \r\n       \r\n <h1>Din playlist: </h1>\r\n      <br></br>\r\n\r\n      <div className=\"div-table\">\r\n          <thead>\r\n          <tr>\r\n          <th scope=\"col\"></th>\r\n             <th scope=\"col\"></th>\r\n             <th scope=\"col\"></th>\r\n        </tr>\r\n        </thead>\r\n\r\n        {resultMap}\r\n          \r\n      </div>\r\n   </>\r\n)\r\n}\r\n\r\nconst getToken = () => {\r\n    return localStorage.getItem('jwtToken')\r\n  }\r\nconst makeOptions= (method,addToken) =>{\r\n    var opts = {\r\n      method: method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        'Accept': 'application/json',\r\n      }\r\n    }\r\n    if (addToken) {\r\n      opts.headers[\"x-access-token\"] = getToken();\r\n    }\r\n    return opts;\r\n  }\r\n\r\nexport  {Test}",{"ruleId":"58","severity":1,"message":"59","line":1,"column":37,"nodeType":"60","messageId":"61","endLine":1,"endColumn":46},{"ruleId":"58","severity":1,"message":"62","line":4,"column":15,"nodeType":"60","messageId":"61","endLine":4,"endColumn":19},{"ruleId":"58","severity":1,"message":"63","line":56,"column":10,"nodeType":"60","messageId":"61","endLine":56,"endColumn":24},{"ruleId":"58","severity":1,"message":"64","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"65","line":1,"column":26,"nodeType":"60","messageId":"61","endLine":1,"endColumn":35},{"ruleId":"66","severity":1,"message":"67","line":34,"column":11,"nodeType":"68","endLine":34,"endColumn":85},{"ruleId":"58","severity":1,"message":"65","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"58","severity":1,"message":"73","line":2,"column":13,"nodeType":"60","messageId":"61","endLine":2,"endColumn":20},{"ruleId":"58","severity":1,"message":"74","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":21},{"ruleId":"58","severity":1,"message":"75","line":10,"column":23,"nodeType":"60","messageId":"61","endLine":10,"endColumn":36},{"ruleId":"66","severity":1,"message":"67","line":41,"column":7,"nodeType":"68","endLine":41,"endColumn":74},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'dataFromServer' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'FaIcons' is defined but never used.","'addToPlayList' is defined but never used.","'SetsearchTerm' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]