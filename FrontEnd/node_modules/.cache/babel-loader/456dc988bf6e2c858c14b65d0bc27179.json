{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathi\\\\Documents\\\\NetBeansProjects\\\\SolidMusic\\\\FrontEnd\\\\src\\\\Fetch.js\",\n    _s = $RefreshSig$();\n\nimport { button, Breadcrumb, Card, Form, Container, Row, Col, Table } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./fetchtable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Fetchmusic() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/SolidCode-BackEnd/api/solidMusic/search?q=jason derulo\").then(res => res.json()).then(result => {\n      setItems(result);\n      setIsLoaded(true);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.response.hits.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"td_image\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"td_image\",\n                  src: item.result.header_image_thumbnail_url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"trdiv\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"result_title\",\n                children: [\" \", item.result.title, \" \", /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: item.result.primary_artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 61\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"result_artist\",\n                children: [\" \", item.result.primary_artist.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 11\n            }, this)\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }, this);\n  }\n}\n\n_s(Fetchmusic, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = Fetchmusic;\nexport { Fetchmusic };\n\nvar _c;\n\n$RefreshReg$(_c, \"Fetchmusic\");","map":{"version":3,"sources":["C:/Users/mathi/Documents/NetBeansProjects/SolidMusic/FrontEnd/src/Fetch.js"],"names":["button","Breadcrumb","Card","Form","Container","Row","Col","Table","React","useState","useEffect","Fetchmusic","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","message","response","hits","map","item","header_image_thumbnail_url","title","primary_artist","name"],"mappings":"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","sourcesContent":["import {button, Breadcrumb, Card, Form, Container, Row, Col,Table} from \"react-bootstrap\"\r\nimport React, { useState,useEffect } from \"react\"\r\nimport  \"./fetchtable.css\"\r\n\r\n\r\nfunction Fetchmusic()   {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n \r\n    useEffect(() => {\r\n      fetch(\"http://localhost:8080/SolidCode-BackEnd/api/solidMusic/search?q=jason derulo\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n        \r\n            setItems(result);\r\n         \r\n              setIsLoaded(true);\r\n\r\n          },\r\n          (error) => {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n          }\r\n        )\r\n    }, [])\r\n  \r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n\r\n     \r\n      return (\r\n     <div className=\"div-table\">\r\n        <Table >\r\n        <thead>\r\n          <tr>\r\n          <th scope=\"col\"></th>\r\n             <th scope=\"col\"></th>\r\n             <th scope=\"col\"></th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n         {items.response.hits.map(item =>\r\n            <>\r\n          <tr>  \r\n            <td className=\"td_image\">\r\n              <img className=\"td_image\" src = {item.result.header_image_thumbnail_url} ></img>\r\n              <tr>\r\n                <div className=\"trdiv\">\r\n\r\n                </div>\r\n              </tr>\r\n            </td>\r\n          <td className=\"result_title\"> {item.result.title} <tr>{item.result.primary_artist.name}</tr></td>\r\n            <td className=\"result_artist\"> {item.result.primary_artist.name} </td>\r\n    \r\n            </tr>\r\n           </>\r\n           )}\r\n          </tbody>\r\n          </Table>\r\n          </div>\r\n      );\r\n      \r\n    }\r\n  }\r\n\r\n  export {Fetchmusic}"]},"metadata":{},"sourceType":"module"}