{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melo-\\\\Documents\\\\NetBeansProjects\\\\SolidMusic\\\\FrontEnd\\\\src\\\\components\\\\Showplaylist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Showplaylist(message) {\n  _s();\n\n  const [items, Setitems] = useState([]);\n  const URL = \"http://localhost:8080/SolidCode-BackEnd\";\n  useEffect(() => {\n    const options = makeOptions(\"POST\", true);\n    fetch(URL + \"/api/playlist/get\", options).then(res => res.json()).then(result => {\n      Setitems(result);\n      console.log(result);\n    });\n  });\n\n  const getToken = () => {\n    return localStorage.getItem('jwtToken');\n  };\n\n  const makeOptions = (method, addToken, body) => {\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        'Accept': 'application/json'\n      }\n    };\n\n    if (addToken) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n\n    return opts;\n  };\n\n  const resultMap = items.map(item => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [item.result, resultMap]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  });\n}\n\n_s(Showplaylist, \"g2t6cmvgjMj0de3Gr8dYD38qw2U=\");\n\n_c = Showplaylist;\nexport { Showplaylist };\n\nvar _c;\n\n$RefreshReg$(_c, \"Showplaylist\");","map":{"version":3,"sources":["C:/Users/melo-/Documents/NetBeansProjects/SolidMusic/FrontEnd/src/components/Showplaylist.js"],"names":["React","useState","useEffect","Showplaylist","message","items","Setitems","URL","options","makeOptions","fetch","then","res","json","result","console","log","getToken","localStorage","getItem","method","addToken","body","opts","headers","JSON","stringify","resultMap","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAAA;;AAC3B,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAMM,GAAG,GAAG,yCAAZ;AAGJL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,OAAO,GAAGC,WAAW,CAAC,MAAD,EAAS,IAAT,CAA3B;AACAC,IAAAA,KAAK,CAACH,GAAG,GAAC,mBAAL,EAAyBC,OAAzB,CAAL,CACCG,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,MAAD,IAAY;AAClBR,MAAAA,QAAQ,CAACQ,MAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACC,KALD;AAOD,GATM,CAAT;;AAYE,QAAMG,QAAQ,GAAG,MAAM;AACrB,WAAOC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAP;AACD,GAFD;;AAKA,QAAMV,WAAW,GAAE,CAACW,MAAD,EAAQC,QAAR,EAAiBC,IAAjB,KAAyB;AAC1C,QAAIC,IAAI,GAAG;AACTH,MAAAA,MAAM,EAAEA,MADC;AAETI,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH;AAFA,KAAX;;AAOA,QAAIH,QAAJ,EAAc;AACZE,MAAAA,IAAI,CAACC,OAAL,CAAa,gBAAb,IAAiCP,QAAQ,EAAzC;AACD;;AACD,QAAIK,IAAJ,EAAU;AACRC,MAAAA,IAAI,CAACD,IAAL,GAAYG,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAZ;AACD;;AACD,WAAOC,IAAP;AACD,GAfD;;AAiBA,QAAMI,SAAS,GAAGtB,KAAK,CAACuB,GAAN,CAAUC,IAAI,IAAG;AACjC,wBACA;AAAA,6BACA;AAAA,mBACKA,IAAI,CAACf,MADV,EAGKa,SAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADA;AAUG,GAXa,CAAlB;AAaD;;GApDQxB,Y;;KAAAA,Y;AAsDT,SAAQA,YAAR","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\n\r\nfunction Showplaylist(message) {\r\n    const[items, Setitems] = useState([])\r\n    const URL = \"http://localhost:8080/SolidCode-BackEnd\";\r\n    \r\n\r\nuseEffect(() => {\r\n    const options = makeOptions(\"POST\", true);\r\n    fetch(URL+\"/api/playlist/get\",options) \r\n    .then(res => res.json())\r\n    .then((result) => {\r\n    Setitems(result)\r\n    console.log(result)\r\n    }\r\n    )\r\n  })\r\n\r\n\r\n  const getToken = () => {\r\n    return localStorage.getItem('jwtToken')\r\n  }\r\n  \r\n  \r\n  const makeOptions= (method,addToken,body) =>{\r\n    var opts = {\r\n      method: method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        'Accept': 'application/json',\r\n      }\r\n    }\r\n    if (addToken) {\r\n      opts.headers[\"x-access-token\"] = getToken();\r\n    }\r\n    if (body) {\r\n      opts.body = JSON.stringify(body);\r\n    }\r\n    return opts;\r\n  }\r\n\r\n  const resultMap = items.map(item =>{\r\n    return(\r\n    <>\r\n    <tr>\r\n        {item.result}\r\n        \r\n        {resultMap}\r\n    </tr>\r\n    \r\n    </>\r\n    )\r\n      }\r\n)\r\n}\r\n \r\nexport {Showplaylist}\r\n  \r\n"]},"metadata":{},"sourceType":"module"}